% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DebtFunctions.R
\name{Debt-Functions}
\alias{Debt-Functions}
\alias{debt}
\alias{logit.debt}
\title{Merger Simulation With Debt}
\usage{
logit.debt(
  prices,
  shares,
  margins,
  ownerPre,
  ownerPost,
  debtPre = rep(0, length(unique(ownerPre))),
  debtPost = debtPre,
  insideSize,
  normIndex = 1,
  focal = 1,
  mcDelta = matrix(0, nrow(prices), ncol(prices)),
  subset = matrix(TRUE, nrow(prices), ncol(prices)),
  priceOutside = 0,
  priceStart = prices,
  parmsStart = c(rep(-10, nrow(prices)), c(1, 1)),
  shareOutParm = c(1, 1),
  isMax = FALSE,
  control.slopes,
  control.equ,
  labels = list(paste("Prod", 1:ncol(prices), sep = ""), paste("Mkt", 1:nrow(prices), sep
    = "")),
  ...
)
}
\arguments{
\item{prices}{A n x f  matrix of product prices.}

\item{shares}{A n x f  matrix of product (quantity) shares. Values must be
between 0 and 1 and rows should sum to 1.}

\item{margins}{A n x f  matrix of product margins in proportions (bounded between 0 and 1), some of which may
equal NA.}

\item{ownerPre}{A vector of length f whose values
indicate which firm produced a product pre-merger.}

\item{ownerPost}{A vector of length f whose values
indicate which firm produced a product post-merger.}

\item{insideSize}{An integer equal to total pre-merger units sold.
If shares sum to one, this also equals the size of the market.}

\item{mcDelta}{An n x f matrix of where each element equals the
proportional change in a downstream firm's product-level marginal costs due to
  the merger. Default is 0, which assumes that the merger does not
  affect any products' marginal cost.}

\item{subset}{A n x f  matrix  where each element equals TRUE if
the product indexed by that element should be included in the
post-merger simulation and FALSE if it should be excluded.Default is a
matrix where each element is TRUE.}

\item{priceOutside}{A length 1 vector indicating the price of the
outside good. Default is 0.}

\item{priceStart}{A n x f  matrix of starting values used to solve for
downstream equilibrium prices. Default is the \sQuote{prices} matrix.}

\item{control.slopes}{A list of  \code{\link{optim}}
control parameters passed to the calibration routine
optimizer (typically the \code{calcSlopes} method).}

\item{control.equ}{A list of  \code{\link[BB]{BBsolve}} control parameters
passed to the non-linear equation solver (typically the \code{calcPrices} method).}

\item{labels}{A k-length vector of labels. Default is "Prod#", where
\sQuote{#} is a number between 1 and the length of \sQuote{prices}.}

\item{...}{Additional options to feed to the \code{\link[BB]{BBsolve}}
optimizer used to solve for equilibrium prices.}
}
\value{
When 'supplyDown' equals "bertand", \code{vertical.barg} returns an instance of class
\code{\linkS4class{VertBargBertLogit}}. When 'supplyDown' equals "2nd", \code{vertical.barg} returns an instance of class
\code{\linkS4class{VertBarg2ndLogit}}
}
\description{
Calibrates consumer demand using Logit
and then simulates the price effect of a merger between two firms
under the assumption that all firms in the market are playing a
differentiated products Bertrand pricing game with Debt.

Let f denote the number of products. Let n denote the number of markets
}
\details{
Using product prices, quantity shares and all of the
product margins from at least one firm, \code{logit} is able to
recover the price coefficient and product mean valuations in a
Logit demand model. \code{logit} then uses these
calibrated parameters to simulate a merger between two firms.
}
\examples{
## 3 single-product firms, each selling in 2 markets. 
## Firms 1 and 2 merge
nprods <- 3
nmarkets <- 2
shares <- matrix(c(0.0734, 0.6339, 0.2927, 0.5557, 0.3224, 0.1219),
nmarkets,nprods,byrow=TRUE)
prices <- matrix(c(107.3837, 156.9111, 131.0415, 118.6787, 108.4132, 99.1364),
nmarkets,nprods,byrow=TRUE)
margins <-matrix(c(23.2785, 66.7227, 21.971, 57.1583, 26.6393, 52.3467),
nmarkets,nprods,byrow=TRUE)
ownerPre <- as.character(c(1, 2, 3))
ownerPost <- as.character(c(1, 1, 3))
debt <- c(14.6943, 30.3841, 16.3995)
insideSize <- 1


simres_debt <- logit.debt(prices,shares,margins,
                             ownerPre,ownerPost,debtPre=debt,
                             insideSize=insideSize)


print(simres_debt)
summary(simres_debt)

}
\author{
Charles Taragin \email{ctaragin+antitrustr@gmail.com}
}
